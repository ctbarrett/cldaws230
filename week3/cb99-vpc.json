{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This stack will provision a new VPC and standard subnets, route tables, and internet gateway, per provided parameters",

  "Metadata" : {
    "Version" : "0.1.0"
  },

  "Parameters" : {

    "VPCType": {
      "Description": "Specify the type and environment for the VPC",
      "Type": "String",
      "Default": "internalDev",
      "AllowedValues": [
        "infrastructure",
        "internalDev",
        "internalTest",
        "externalTest",
        "internalProd",
        "externalProd"
      ]
    },

    "VPCIPRange": {
      "Description": "The IP Range for the VPC being created",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP range in CIDR notation (x.x.x.x/x)"
    },

    "SubnetAZ1CIDR": {
      "Description": "The IP Range for the subnet in AZ1",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP range in CIDR notation (x.x.x.x/x)"
    },

    "SubnetAZ2CIDR": {
      "Description": "The IP Range for the subnet in AZ2",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP range in CIDR notation (x.x.x.x/x)"
    },

    "SubnetAZ3CIDR": {
      "Description": "The IP Range for the subnet in AZ3",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP range in CIDR notation (x.x.x.x/x)"
    }
  },

  "Mappings" : {
    "RegionMap": {
      "us-west-2": {
        "shortRegion": "uw2",
        "AZ1ID": "a",
        "AZ2ID": "b",
        "AZ3ID": "c",
        "AZ1": "us-west-2a",
        "AZ2": "us-west-2b",
        "AZ3": "us-west-2c"
      },

      "us-east-1": {
        "shortRegion": "ue1",
        "AZ1ID": "b",
        "AZ2ID": "c",
        "AZ3ID": "d",
        "AZ1": "us-east-1b",
        "AZ2": "us-east-1c",
        "AZ3": "us-east-1d"
      }
    }
  },

  "Conditions": {
    "HasPublicSubnets": {
      "Fn::Or": [
        {"Fn::Equals": [ { "Ref": "VPCType" }, "externalTest" ] },
        {"Fn::Equals": [ { "Ref": "VPCType" }, "externalProd" ] }
      ]
    }
  },

  "Resources" : {
    "VPC": {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref": "VPCIPRange" },
        "Tags": [{
          "Key": "Name",
          "Value": { "Fn::Join": [ "-", [
            "vpc",
            { "Ref": "VPCType" },
            { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "shortRegion" ] }
          ]]}
        }]
      }
    },

    "SubnetAZ1": {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "AZ1" ] },
        "CidrBlock" : { "Ref": "SubnetAZ1CIDR" },
        "MapPublicIpOnLaunch" : {
          "Fn::If": [
            "HasPublicSubnets",
            "true",
            "false"
          ]
        },
        "Tags" : [{
          "Key": "Name",
          "Value": { "Fn::Join": [ "-", [
            "subnet",
            { "Ref": "VPCType" },
            { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "shortRegion" ] },
            "az1"
          ]]}
        }],
        "VpcId" : { "Ref" : "VPC" }
      }
    },

    "SubnetAZ2": {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "AZ2" ] },
        "CidrBlock" : { "Ref": "SubnetAZ2CIDR" },
        "MapPublicIpOnLaunch" : {
          "Fn::If": [
            "HasPublicSubnets",
            "true",
            "false"
          ]
        },
        "Tags" : [{
          "Key": "Name",
          "Value": { "Fn::Join": [ "-", [
            "subnet",
            { "Ref": "VPCType" },
            { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "shortRegion" ] },
            "az2"
          ]]}
        }],
        "VpcId" : { "Ref" : "VPC" }
      }
    },

    "SubnetAZ3": {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "AZ3" ] },
        "CidrBlock" : { "Ref": "SubnetAZ3CIDR" },
        "MapPublicIpOnLaunch" : {
          "Fn::If": [
            "HasPublicSubnets",
            "true",
            "false"
          ]
        },
        "Tags" : [{
          "Key": "Name",
          "Value": { "Fn::Join": [ "-", [
            "subnet",
            { "Ref": "VPCType" },
            { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "shortRegion" ] },
            "az3"
          ]]}
        }],
        "VpcId" : { "Ref" : "VPC" }
      }
    },

    "IGW": {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags": [{
          "Key": "Name",
          "Value": { "Fn::Join": [ "-", [
            "igw",
            { "Ref": "VPCType" },
            { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "shortRegion" ] }
          ]]}
        }]
      }
    },

    "IGWAttachment": {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "InternetGatewayId" : { "Ref": "IGW" },
        "VpcId" : { "Ref": "VPC" }
      }
    }
  },

  "Outputs" : {
    "VPCName": {
      "Description": "The name of the new/updated VPC",
      "Value": { "Fn::Join": [ "-", [
        "vpc",
        { "Ref": "VPCType" },
        { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "shortRegion" ] }
      ]]}
    },
    "VPC": {
      "Description": "The VPC-ID for the new/updated VPC",
      "Value": { "Ref": "VPC" }
    }
  }
}
